machine:
  timezone:
    America/Chicago
  php:
    version: 7.0.11
  environment:
    # In addition to the environment variables defined in this file, these
    # other variables are defined in the Circle CI UI.
    #
    # TERMINUS_SITE:  Name of the Pantheon site to run tests on, e.g. my_site
    # TERMINUS_TOKEN: The Pantheon machine token
    # GITHUB_TOKEN:   The GitHub personal access token
    # GIT_EMAIL:      The email address to use when making commits
    #
    # TEST_SITE_NAME: The name of the test site to provide when installing.
    # ADMIN_PASSWORD: The admin password to use when installing.
    # ADMIN_EMAIL:    The email address to give the admin when installing.
    #
    BRANCH: $(echo $CIRCLE_BRANCH | grep -v '^\(master\|[0-9]\+.x\)$')
    PR_ENV: ${BRANCH:+pr-$BRANCH}
    CIRCLE_ENV: ci-test
    DEFAULT_ENV: $(echo ${PR_ENV:-$CIRCLE_ENV} | cut -c -11 | sed 's/-$//')
    TERMINUS_ENV: ${TERMINUS_ENV:-$DEFAULT_ENV}
    NOTIFY: 'scripts/github/add-commit-comment {project} {sha} "Created multidev environment [{site}#{env}]({dashboard-url})." {site-url}'
    PATH: $PATH:~/.composer/vendor/bin:~/.config/composer/vendor/bin:tests/scripts
    TERMINUS_ENV_EXISTS: TRUE

dependencies:
  cache_directories:
    - ~/.composer/cache
  pre:
    - echo "Begin build for $CIRCLE_ENV${PR_ENV:+ for }$PR_ENV. Pantheon test environment is $TERMINUS_SITE.$TERMINUS_ENV"
    - composer config --global github-oauth.github.com $GITHUB_TOKEN
    - git config --global user.email "$GIT_EMAIL"
    - git config --global user.name "Circle CI"
  override:
    - composer global require -n "hirak/prestissimo:^0.3"
    - composer global require -n "consolidation/cgr"
    - cgr "pantheon-systems/terminus:^1"
    - terminus --version
    - cgr "drush/drush:~8"
    - mkdir -p ~/.terminus/plugins
    - composer create-project -n -d ~/.terminus/plugins pantheon-systems/terminus-build-tools-plugin:^1
    - composer create-project -n -d ~/.terminus/plugins pantheon-systems/terminus-secrets-plugin:^1
  post:
    - terminus auth:login -n --machine-token="$TERMINUS_TOKEN"
    # Run Composer to Build the Asssets
    - composer -n build-assets
    - terminus env:wake -n "$TERMINUS_SITE.dev"
    # Setup the CI Testing Environment
    - |
      if [ -n "$TERMINUS_ENV_EXISTS" ] ; then
        terminus env:clone-content "$TERMINUS_SITE.dev" "$TERMINUS_ENV" --yes --notify="$NOTIFY"
      else
        terminus build-env:create -n "$TERMINUS_SITE.dev" "$TERMINUS_ENV" --yes --clone-content --db-only --notify="$NOTIFY"
      fi
    - 
    # Import Configuration Into Site
    - terminus drush "$TERMINUS_SITE.$TERMINUS_ENV" -- config-import --yes
test:
  override:
    # Disable testing for now
    # - run-behat
  post:
    - terminus secrets:set -n "$TERMINUS_SITE.$TERMINUS_ENV" token "$GITHUB_TOKEN" --file='github-secrets.json' --clear --skip-if-empty

deployment:
  build-assets:
    branch: master
    commands:
      # Merge the Code from the Testing Environment to Master
      - terminus build-env:merge -n "$TERMINUS_SITE.$TERMINUS_ENV" --yes
      # Run UpdateDB on the Master Environment
      - terminus drush -n $TERMINUS_SITE.dev -- updatedb --yes
      # Import Configuration Into Dev Site
      - terminus drush "$TERMINUS_SITE.dev" -- config-import --yes
